/// <reference path="HeartbeatService.d.ts" />
//
// Autogenerated by Thrift Compiler (0.14.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//

import Int64 = require('node-int64');

import { logservice } from "./logservice_types";


/**
 * A receiver of LogEntry:s. This is a thrift clone of the IfLogServer
 * interface. Registering this service and starting the ThriftLogForwarder
 * service in the IDE platform lets you receive everything logged by the IDE
 * platform.
 */
export declare class Client extends HeartbeatService.Client {
  input: Thrift.TJSONProtocol;
  output: Thrift.TJSONProtocol;
  seqid: number;

  constructor(input: Thrift.TJSONProtocol, output?: Thrift.TJSONProtocol);

  addCategory(category: string): Q.Promise<void>;

  addCategory(category: string, callback?: (data: void)=>void): void;

  removeCategory(category: string): Q.Promise<void>;

  removeCategory(category: string, callback?: (data: void)=>void): void;

  startSession(category: string): Q.Promise<void>;

  startSession(category: string, callback?: (data: void)=>void): void;

  postLogEntry(entry: LogEntry): Q.Promise<void>;

  postLogEntry(entry: LogEntry, callback?: (data: void)=>void): void;
}
