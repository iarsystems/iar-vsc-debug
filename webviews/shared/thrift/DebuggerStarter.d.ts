/// <reference path="HeartbeatService.d.ts" />
//
// Autogenerated by Thrift Compiler (0.14.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//

import Int64 = require('node-int64');

import { ampsync } from "./ampsync_types";


export declare class Client extends HeartbeatService.Client {
  input: Thrift.TJSONProtocol;
  output: Thrift.TJSONProtocol;
  seqid: number;

  constructor(input: Thrift.TJSONProtocol, output?: Thrift.TJSONProtocol);

  Configure(stageDir: string, defaultTool: Tools): Q.Promise<void>;

  Configure(stageDir: string, defaultTool: Tools, callback?: (data: void)=>void): void;

  StartServiceRegistry(): Q.Promise<ServiceLocation>;

  StartServiceRegistry(callback?: (data: ServiceLocation)=>void): void;

  StartDebuggers(parentServiceRegistryLoc: ServiceLocation, sharedServiceRegistryLoc: ServiceLocation): Q.Promise<ServiceLocation[]>;

  StartDebuggers(parentServiceRegistryLoc: ServiceLocation, sharedServiceRegistryLoc: ServiceLocation, callback?: (data: ServiceLocation[])=>void): void;

  TerminateDebuggers(): Q.Promise<void>;

  TerminateDebuggers(callback?: (data: void)=>void): void;

  GetPartnerNamespace(partnerId: number, sharedServiceRegistryLoc: ServiceLocation): Q.Promise<string>;

  GetPartnerNamespace(partnerId: number, sharedServiceRegistryLoc: ServiceLocation, callback?: (data: string)=>void): void;
}
