//
// Autogenerated by Thrift Compiler (0.14.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//

import Int64 = require('node-int64');

import { crun } from "./crun_types";


/**
 * Service for controlling filters and actions.
 */
export declare class Client {
  input: Thrift.TJSONProtocol;
  output: Thrift.TJSONProtocol;
  seqid: number;

  constructor(input: Thrift.TJSONProtocol, output?: Thrift.TJSONProtocol);

  loadFilters(filename: string): Q.Promise<void>;

  loadFilters(filename: string, callback?: (data: void)=>void): void;

  saveFilters(filename: string): Q.Promise<void>;

  saveFilters(filename: string, callback?: (data: void)=>void): void;

  addRuleOnMessage(messageName: string): Q.Promise<void>;

  addRuleOnMessage(messageName: string, callback?: (data: void)=>void): void;

  addRuleOnMessageFile(messageName: string, file: string): Q.Promise<void>;

  addRuleOnMessageFile(messageName: string, file: string, callback?: (data: void)=>void): void;

  addRuleOnMessageRange(messageName: string, range: SourceRange): Q.Promise<void>;

  addRuleOnMessageRange(messageName: string, range: SourceRange, callback?: (data: void)=>void): void;

  setDefaultAction(action: CRunBreakAction): Q.Promise<void>;

  setDefaultAction(action: CRunBreakAction, callback?: (data: void)=>void): void;

  getDefaultAction(): Q.Promise<CRunBreakAction>;

  getDefaultAction(callback?: (data: CRunBreakAction)=>void): void;
}
