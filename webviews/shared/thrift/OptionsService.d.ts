//
// Autogenerated by Thrift Compiler (0.14.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//

import Int64 = require('node-int64');

import { OptionsService } from "./OptionsService_types";


export declare class Client {
  input: Thrift.TJSONProtocol;
  output: Thrift.TJSONProtocol;
  seqid: number;

  constructor(input: Thrift.TJSONProtocol, output?: Thrift.TJSONProtocol);

  CreateSession(request: CreateSessionRequest): Q.Promise<CreateSessionResponse>;

  CreateSession(request: CreateSessionRequest, callback?: (data: CreateSessionResponse)=>void): void;

  CreateSessionWithData(request: CreateSessionWithDataRequest): Q.Promise<CreateSessionResponse>;

  CreateSessionWithData(request: CreateSessionWithDataRequest, callback?: (data: CreateSessionResponse)=>void): void;

  UpdateOptionValue(request: UpdateOptionValueRequest): Q.Promise<UpdateOptionValueResponse>;

  UpdateOptionValue(request: UpdateOptionValueRequest, callback?: (data: UpdateOptionValueResponse)=>void): void;

  DestroySession(destroySessionRequest: DestroySessionRequest): Q.Promise<DestroySessionResponse>;

  DestroySession(destroySessionRequest: DestroySessionRequest, callback?: (data: DestroySessionResponse)=>void): void;

  GetCategoryTree(getCategoryTreeRequest: GetCategoryTreeRequest): Q.Promise<GetCategoryTreeResponse>;

  GetCategoryTree(getCategoryTreeRequest: GetCategoryTreeRequest, callback?: (data: GetCategoryTreeResponse)=>void): void;

  GetOptionTree(getOptionTreeRequest: GetOptionTreeRequest): Q.Promise<GetOptionTreeResponse>;

  GetOptionTree(getOptionTreeRequest: GetOptionTreeRequest, callback?: (data: GetOptionTreeResponse)=>void): void;

  VerifyOptionState(verifyOptionStateRequest: VerifyOptionStateRequest): Q.Promise<VerifyOptionStateResponse>;

  VerifyOptionState(verifyOptionStateRequest: VerifyOptionStateRequest, callback?: (data: VerifyOptionStateResponse)=>void): void;

  CommitOptionState(commitOptionStateRequest: CommitOptionStateRequest): Q.Promise<CommitOptionStateResponse>;

  CommitOptionState(commitOptionStateRequest: CommitOptionStateRequest, callback?: (data: CommitOptionStateResponse)=>void): void;
}
